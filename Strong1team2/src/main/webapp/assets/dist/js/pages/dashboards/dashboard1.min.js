$(function() {
	c3.generate({
		bindto: "#campaign-v2",
		data: {
			columns: [["Direct Sales", 25],
			["Referral Sales", 15],
			["Afilliate Sales", 10],
			["Indirect Sales", 15]],
			type: "donut",
			tooltip: { show: !0 }
		},

		donut: {
			label: { show: !1 },
			title: "Sales",
			width: 18
		},
		legend: { hide: !0 },
		color: { pattern: ["#edf2f6", "#5f76e8", "#ff4f70", "#01caf1"] }
	});


	d3.select("#campaign-v2 .c3-chart-arcs-title").style("font-family", "Rubik");
	var e = {
		axisX: { showGrid: !1 },
		seriesBarDistance: 1,
		chartPadding: { top: 15, right: 15, bottom: 5, left: 0 },
		plugins: [Chartist.plugins.tooltip()],
		width: "100%"
	};

	$.ajax({

		// 데이터 요청 주소
		url: "DashBoard.do",

		// 데이터 타입
		dataType: "json",

		// 성공
		success: function(result) {
			console.log("성공");
			console.log("데이터: ", result); // 객체 전체를 출력해 보기 위해 콤마(,)를 사용하여 분리
			console.log("DashBoard.jsp2");

			// 서버로부터 받은 JSON 객체의 c_year와 c_num 속성값 출력
			if (result) {
				new Chartist.Bar(".net-income",
					{
						labels: ["0-19세", "20대", "30대", "40대", "50대", "60세 이상"],
						series: [[result[48].a_num + result[49].a_num, result[47].a_num, result[46].a_num, result[45].a_num, result[44].a_num, result[43].a_num ]]
					},
					e, [["screen and (max-width: 640px)",
						{
							seriesBarDistance: 7,
							axisX: { labelInterpolationFnc: function(e) { return e[0] } }
						}]])

			} else {
				// 예외 처리: res가 비어있거나 유효한 데이터가 없는 경우
				console.log("데이터가 없거나 형식이 맞지 않습니다.");
			}
		},
		error: function(xhr, status, error) {
			console.log("Error: ", error); // 에러 로그 출력
			console.log("DashBoard.jsp3");
		}
	});

    
   

	jQuery("#visitbylocate").vectorMap({
		map: "world_mill_en",
		backgroundColor: "transparent",
		borderColor: "#000",
		borderOpacity: 0, borderWidth: 0, zoomOnScroll: !1, color: "#d5dce5",
		regionStyle: { initial: { fill: "#d5dce5", "stroke-width": 1, stroke: "rgba(255, 255, 255, 0.5)" } }
		, enableZoom: !0,
		hoverColor: "#bdc9d7",
		hoverOpacity: null,
		normalizeFunction: "linear",
		scaleColors: ["#d5dce5", "#d5dce5"],
		selectedColor: "#bdc9d7",
		selectedRegions: [],
		showTooltip: !0,
		onRegionClick: function(e, t, o) { var a = 'You clicked "' + o + '" which has the code: ' + t.toUpperCase(); alert(a) }
	});


	var t = new Chartist.Line(".stats",
		{
			labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
			series: [[11, 10, 15, 21, 14, 23, 12]]
		},
		{
			low: 0,
			high: 28,
			showArea: !0,
			fullWidth: !0,
			plugins: [Chartist.plugins.tooltip()]
			, axisY: {
				onlyInteger: !0,
				scaleMinSpace: 40,
				offset: 20,
				labelInterpolationFnc: function(e) { return e / 1 + "k" }
			}
		});
	t.on("draw",
		function(e) { "area" === e.type && e.element.attr({ x1: e.x1 + .001 }) }),
		t.on("created", function(e) {
			e.svg.elem("defs").elem("linearGradient",
				{ id: "gradient", x1: 0, y1: 1, x2: 0, y2: 0 }).elem(
					"stop",
					{
						offset: 0,
						"stop-color": "rgba(255, 255, 255, 1)"
					}).parent().elem("stop",
						{
							offset: 1,
							"stop-color": "rgba(80, 153, 255, 1)"
						})
		}),
		$(window).on("resize",
			function() { t.update() })
});